// Code generated by MockGen. DO NOT EDIT.
// Source: calories-counter/models (interfaces: CaloriesDatastore)

// Package calories_datastore is a generated GoMock package.
package calories_datastore

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCaloriesDatastore is a mock of CaloriesDatastore interface
type MockCaloriesDatastore struct {
	ctrl     *gomock.Controller
	recorder *MockCaloriesDatastoreMockRecorder
}

// MockCaloriesDatastoreMockRecorder is the mock recorder for MockCaloriesDatastore
type MockCaloriesDatastoreMockRecorder struct {
	mock *MockCaloriesDatastore
}

// NewMockCaloriesDatastore creates a new mock instance
func NewMockCaloriesDatastore(ctrl *gomock.Controller) *MockCaloriesDatastore {
	mock := &MockCaloriesDatastore{ctrl: ctrl}
	mock.recorder = &MockCaloriesDatastoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCaloriesDatastore) EXPECT() *MockCaloriesDatastoreMockRecorder {
	return m.recorder
}

// GetCalories mocks base method
func (m *MockCaloriesDatastore) GetCalories(arg0 string) (*int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCalories", arg0)
	ret0, _ := ret[0].(*int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCalories indicates an expected call of GetCalories
func (mr *MockCaloriesDatastoreMockRecorder) GetCalories(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCalories", reflect.TypeOf((*MockCaloriesDatastore)(nil).GetCalories), arg0)
}
